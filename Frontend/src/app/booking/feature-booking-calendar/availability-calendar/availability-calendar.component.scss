.calendar-container {
  display: flex;
}

.calendar {
  padding-right: 10px;
  min-width: 384px;
}

.calendar-headline {
  display: flex;
  margin-bottom: 10px;
  justify-content: space-between;
  padding: 0 20px;
}

.calendar-headline-month {
  font-weight: 600;
}

.calendar-headline-controls {
  display: flex;
}

.calendar-headline-control {
  cursor: pointer;
}

.calendar-headline-control:hover {
  text-decoration: underline;
}

.calendar-headline-control-today {
  margin: 0 10px;
}

.calendar-weeks-grid {
  display: grid;
  grid-template-columns: repeat(8, minmax(0, 1fr));
  font-size: 12px;
  margin-bottom: 10px;
  color: white;
}

.calendar-weeks-grid-cell {
  text-align: center;
}

.calendar-grid-cell-inactive {
  color: #9e9e9e;
}

.calendar-grid {
  display: grid;
  grid-template-columns: repeat(8, minmax(0, 1fr));
  border-top: 1px solid rgb(190, 190, 190);
  border-left: 1px solid rgb(190, 190, 190);
}

.calendar-grid-cell {
  padding: 10px;
  display: flex;
  align-items: center;
  justify-content: flex-start; /* Changed from center to flex-start */
  border-bottom: 1px solid rgb(190, 190, 190);
  border-right: 1px solid rgb(190, 190, 190);
  cursor: pointer;
  overflow: hidden; /* Prevent content from overflowing */
  position: relative; /* Establish containing block for absolute positioned children */
  min-height: 0; /* Allow flex item to shrink below content size */
  box-sizing: border-box; /* Include padding and border in element's total width and height */
}

.calendar-grid-cell > * {
  margin: 0 auto; /* Center the direct children manually */
}
.calendar-grid-cell:hover {
  background: lightslategray;
}

.calendar-grid-cell-active {
  color: lightblue;
  background: slategray;
}

.schedule {
  margin-left: 10px;
}

.schedule-headline {
  font-weight: 600;
  margin-bottom: 30px;
}

.my-custom-button {
  /* To make the outline invisible (on focus) */
  outline: none;       /* For standard browsers */
  box-shadow: none;    /* For some browser-specific outlines like Webkit's */
  border: none;        /* If there's a default border you want to remove */

  /* Make the background completely invisible/transparent */
  background-color: transparent;

  /* Change the color of the icon (and any text inside if there was any) */
  color: white; /* Example: A blue color for the icon */

  /* Optional: Add padding around the icon to make it a clickable area */
  padding: 8px; /* Adjust as needed */

  /* Optional: Make it look like a clickable element */
  cursor: pointer;
  display: inline-flex; /* To ensure the icon is centered */
  align-items: center;
  justify-content: center;
  /* Remove border-radius if you don't want any visual hint of a button shape */
}

/* Optional: Style on hover to give visual feedback */
.my-custom-button:hover {
  /* You can make the icon slightly darker, or add a subtle background */
  color: lightblue; /* Darker blue on hover */
  /* background-color: rgba(0, 0, 0, 0.05); /* Very subtle light grey background on hover */
}

/* If the mat-icon itself needs specific styling for some reason, though `color` usually suffices */
.my-custom-button mat-icon {
  /* You can target the icon specifically if needed, but `color` on the parent is usually inherited */
  font-size: 24px; /* Example: Adjust icon size if needed */
}

.calendar-grid-cell:not(.calendar-grid-cell-selected) * {
  pointer-events: none !important;
  opacity: 0.8;
  cursor: not-allowed;
}

.calendar-grid-cell-selected * {
  pointer-events: auto !important;
  opacity: 1;
  cursor: pointer;
}

.calendar-grid-cell-selected .my-custom-button {
  pointer-events: auto !important;
  opacity: 1;
  cursor: pointer;
}

.calendar-grid-cell-selected {
  background: white !important;
  color: black;
}

.calendar-grid-cell-selected * {
  pointer-events: auto !important;
  opacity: 1;
  cursor: pointer;
}
